#создание списка со сведениями о статусе каждой клетки
game = [['-', '-', '-'], ['-', '-', '-'], ['-', '-', '-']]
round = 0


#вывод поля в консоль
def show ():
    print('      1     2     3\n1 %5s %5s %5s \n2 %5s %5s %5s \n3 %5s %5s %5s\n'
        % (game[0][0], game[0][1], game[0][2],
        game[1][0], game[1][1], game[1][2],
        game[2][0], game[2][1], game[2][2]))
    check(game)

#шаг
def step():
    x = int(input("Введите номер строки (от 1 до 3): ")) - 1
    y = int(input("Введите номер столбца (от 1 до 3): ")) - 1

    #проверка на корректность ввода
    if 0 > x or x > 2 or 0 > y or y > 2:
        print('Введены неверные координаты, повторите ввод')
        step()
    #если поле пусто, то ему присваивается символ, после чего переменная с символом меняется для следующего хода
    if game[x][y] == "-":
        global round
        round = round + 1
        if (round % 2 != 0):
            symbol = 'X'
        else: symbol = '0'
        game[x][y] = symbol
        show()
    else:
        print('Данное поле уже занято, укажите другие координаты')
        step()

def check(game):
    #проверка на победу
    if game[0][0] == game[0][1] == game[0][2] != '-' or \
        game[1][0] == game[1][1] == game[1][2] != '-' or \
        game[2][0] == game[2][1] == game[2][2] != '-' or \
        game[0][0] == game[1][0] == game[2][0] != '-' or \
        game[0][1] == game[1][1] == game[2][1] != '-' or \
        game[0][2] == game[1][2] == game[2][2] != '-' or \
        game[0][0] == game[1][1] == game[2][2] != '-' or \
        game[0][2] == game[1][1] == game[2][0] != '-':
        print('GAME OVER')
    #проверка на наличие свободных полей
    elif game[0].count('-') or game[1].count('-') or game[2].count('-') > 0:
        step()
    #если победителя нет и свободные места закончились - ничья
    else:
        print('Ничья')
show()


